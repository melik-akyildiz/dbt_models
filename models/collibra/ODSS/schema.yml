
version: 2

models:
  - name: MAIN_EXAMPLE
    description: "frist dbt model"
    columns:
      - name: C_CUSTKEY
        description: "The primary key for this table"
        tests:
          - unique
          - not_null
      - name: A_CUSTKEY
        description: "Secondary Column"
        tests:
          - unique
          - not_null

  - name: DEPENDS_ON_EXAMPLE
    description: "second dbt model"
    columns:
      - name: C_CUSTKEY
        description: "secondary model for a column"
        tests:
          - not_null

  - name: SECOND_DEPENDS_ON_EXAMPLE
    description: "third dbt model"
    columns:
      - name: C_CUSTKEY
        description: "third model for a column"
        tests:

  - name: SOURCE_EXAMPLE
    description: "source dbt model"
    columns:
      - name: C_CUSTKEY
        description: "column for source"
        tests:

  - name: NODES_DEPENDS_ON_EXAMPLE
    description: "Node lineage test"
    columns:
      - name: C_CUSTKEY
        description: "The primary key for this table"
        tests:
          -
  - name: fct_orders
    description: orders fact table
    columns:
        - name: order_key
          description: primary key of the model
          tests:
            - unique
            - not_null
        - name: customer_key
          description: foreign key for customers
          tests:
            - relationships:
                to: ref('dim_customers')
                field: customer_key
                severity: error
        - name: order_date
          description: date of the order
        - name: status_code
          description: status of the order
        - name: priority_code
          description: code associated with the order
        - name: clerk_name
          description: id of the clerk
        - name: ship_priority
          description: numeric representation of the shipping priority, zero being the default
        - name: order_count
          description: count of order
        - name: gross_item_sales_amount
          description: '{{ doc("gross_item_sales_amount") }}'
        - name: item_discount_amount
          description: '{{ doc("item_discount_amount") }}'
        - name: item_tax_amount
          description: '{{ doc("item_tax_amount") }}'
        - name: net_item_sales_amount
          description: '{{ doc("net_item_sales_amount") }}'
sources:
  - name: test_source
    tables:
      - name: MELIK_CUSTOMER
      - name: MELIK_ORDERS

metrics:
  - name: test_metrics
    label: metrics
    model: ref('DEPENDS_ON_EXAMPLE')
    description: "Total revenue from orders in the specified time period"

    type: count
    sql: C_CUSTKEY

    dimensions:
      - C_CUSTKEY

exposures:
  - name: yearly_part_rollup
    description: |
      # Parts by year
      ============

      This dashboard allows us to look at the count of all the parts we have over time rolled up to a yearly cadence.

      Its divided into:
        * *small* parts
        * `medium` parts
        * **large** parts

    # type could be {dashboard, notebook, analysis, ml, application}
    type: dashboard

    # this is just a link to the thing itself for click through from documentation
    url: https://example.com

    # convenience feature - relative scale of {high, medium, low}
    maturity: high

    # documentation purposes for point of contact if stuff breaks
    owner:
      name: dbt user Melik
      email: dbtusermelik@getdbt.com

    # IMPORTANT: determines the lineage relationship of the exposure construct to the rest of your DAG
    depends_on:
      - ref('MAIN_EXAMPLE')

